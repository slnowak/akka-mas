akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "localhost"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@localhost:2551"
    ]

    singleton {
      # The actor name of the child singleton actor.
      singleton-name = "singleton"

      # Singleton among the nodes tagged with specified role.
      # If the role is not specified it's a singleton among all nodes in the cluster.
      role = ""

      # When a node is becoming oldest it sends hand-over request to previous oldest,
      # that might be leaving the cluster. This is retried with this interval until
      # the previous oldest confirms that the hand over has started or the previous
      # oldest member is removed from the cluster (+ akka.cluster.down-removal-margin).
      hand-over-retry-interval = 1s

      # The number of retries are derived from hand-over-retry-interval and
      # akka.cluster.down-removal-margin (or ClusterSingletonManagerSettings.removalMargin),
      # but it will never be less than this property.
      min-number-of-hand-over-retries = 10
    }

    auto-down-unreachable-after = 10s
  }

  logLevel = INFO
}

# Kamon Metrics
# ~~~~~~~~~~~~~~

kamon {

  metric {
    tick-interval = 1 second
    filters {
      akka-actor {
        includes = ["ClusterSystem/user/island/MigrationArena"]
        excludes = ["ClusterSystem/system/**"]
      }

      akka-dispatcher {
        includes = [""]
      }

      akka-router {
        includes = [""]
      }
    }
  }

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  statsd {
    hostname = "localhost"
    port = 8125

    flush-interval = 1 second

    max-packet-size = 1024 bytes

    includes {
      actor = ["*"]
      trace = ["*"]
      dispatcher = ["*"]
    }

    simple-metric-key-generator {
      application = "akkamas"
      include-hostname = true
    }
  }
}
